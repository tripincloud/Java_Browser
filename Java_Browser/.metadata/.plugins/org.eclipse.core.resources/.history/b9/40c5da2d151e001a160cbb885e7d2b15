import java.util.Collection;
import java.util.Iterator;
import java.util.Set;

import core.*;

public class Evaluation {
	private Set <String> docN = new Set<String>() {
		
		@Override
		public <T> T[] toArray(T[] arg0) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Object[] toArray() {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public int size() {
			// TODO Auto-generated method stub
			return 0;
		}
		
		@Override
		public boolean retainAll(Collection<?> arg0) {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public boolean removeAll(Collection<?> arg0) {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public boolean remove(Object arg0) {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public Iterator<String> iterator() {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public boolean isEmpty() {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public boolean containsAll(Collection<?> arg0) {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public boolean contains(Object arg0) {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public void clear() {
			// TODO Auto-generated method stub
			
		}
		
		@Override
		public boolean addAll(Collection<? extends String> arg0) {
			// TODO Auto-generated method stub
			return false;
		}
		
		@Override
		public boolean add(String arg0) {
			// TODO Auto-generated method stub
			return false;
		}
	};
	private Requete q;
	
	public Evaluation(Set <String> docN, Requete q, int n) {
		this.q=q;
		this.docN=docN;
		int i=0;
		for (String id : docN) {
			if (i<n)
				this.docN.add(id);
		}
	}
	
	public double Precision() {
		int docCom=0;
		for (String doc1 : docN) {
			for (String doc2 : q.DocAttendus()) {
				System.out.println(doc1.equals("2185"));
			}
		}
		
		return docCom;
	}
	
	public double Rappel() {
		int docCom=0;
		for (String doc1 : docN) {
			for (String doc2 : q.DocAttendus()) {
				if (doc1 == doc2)
					docCom++;
			}
		}
		
		return docCom/q.DocAttendus().size();
	}
	
	public double  Fmesure(){
		return 2*(this.Precision()*this.Rappel())/(this.Precision()+this.Rappel());
	}
}
